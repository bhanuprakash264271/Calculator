{"version":3,"sources":["calculator/constants.js","calculator/nameList.js","calculator/pieChart.js","calculator/totalAmount.js","calculator/parent.js","App.js","index.js"],"names":["amountNames","Rajeev","Nandan","Shreyas","Tirth","Bhanu","booleanNames","All","NameList","props","React","useState","nameList","setNameList","name","setName","price","setPrice","useEffect","lastValue","handleCalculation","handleChange","event","target","checked","doneValue","addClick","obj","count","Object","keys","length","forEach","item","pricePerPerson","handleAdd","indexValue","Fragment","Grid","container","spacing","style","paddingTop","xs","FormControl","sx","m","width","variant","InputLabel","htmlFor","Input","id","label","value","onChange","marginRight","disabled","isDone","type","startAdornment","InputAdornment","position","component","FormGroup","aria-label","row","map","key","FormControlLabel","control","Checkbox","labelPlacement","Button","backgroundColor","color","onClick","handleDone","isCompute","handleAmountChange","PieChart","chartData","setChartData","show","setShow","names","amount","displayData","data","push","Math","round","labels","datasets","borderColor","borderWidth","height","options","maintainAspectRatio","TotalAmount","amountData","Typography","fontSize","fontWeight","gutterBottom","fsx","OutlinedInput","marginTop","ChartJS","register","ArcElement","Tooltip","Legend","styled","Paper","theme","typography","body2","padding","textAlign","palette","text","secondary","Parent","countList","setCountList","priceList","setPriceList","amountList","setAmountList","done","setDone","compute","setCompute","setEdit","handlePrice","isAdd","index","dummyList","dummyCountList","newValue","handleAmount","dummyData","document","getElementById","scrollIntoView","Box","flexGrow","md","Card","margin","CardContent","App","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.7843c22c.chunk.js","sourcesContent":["export const amountNames = {\r\n    Rajeev: 0.00,\r\n    Nandan: 0.00,\r\n    Shreyas: 0.00,\r\n    Tirth: 0.00,\r\n    Bhanu: 0.00\r\n}\r\n\r\nexport const booleanNames = {\r\n    Rajeev: false,\r\n    Nandan: false,\r\n    Shreyas: false,\r\n    Tirth: false,\r\n    Bhanu: false,\r\n    All: false\r\n}","import React, { useEffect } from 'react';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport FormGroup from '@mui/material/FormGroup';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport Grid from '@mui/material/Grid';\r\nimport Button from '@mui/material/Button';\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\nimport Input from '@mui/material/Input';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport { booleanNames, amountNames } from './constants';\r\n\r\nexport default function NameList(props) {\r\n  const [nameList, setNameList] = React.useState({ ...booleanNames });\r\n\r\n  const [name, setName] = React.useState('');\r\n  const [price, setPrice] = React.useState(null);\r\n\r\n\r\n  const handleName = (event) => {\r\n    setName(event.target.value);\r\n  };\r\n\r\n\r\n  useEffect(() => {\r\n    if (!props.lastValue) {\r\n      handleCalculation(false, false);\r\n    }\r\n  }, [price, nameList])\r\n\r\n  const handlePrice = (event) => {\r\n    setPrice(event.target.value);\r\n  };\r\n\r\n  const handleDone = () => {\r\n    handleCalculation(true, false);\r\n    props.handleDone(true);\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    setNameList({\r\n      ...nameList,\r\n      [event.target.name]: event.target.checked,\r\n    });\r\n  };\r\n\r\n  const handleCalculation = (doneValue, addClick) => {\r\n    let obj = { ...amountNames };\r\n    if (price !== 0) {\r\n      let count = 0;\r\n      if (nameList['All'] == true) {\r\n        count = Object.keys(nameList).length - 1;\r\n      } else {\r\n        Object.keys(nameList).forEach(item => {\r\n          if (nameList[item] == true) {\r\n            count = count + 1;\r\n          }\r\n        })\r\n      }\r\n      let pricePerPerson = price / count;\r\n      Object.keys(nameList).forEach(item => {\r\n        if (item != 'All' && (nameList[item] == true || nameList['All'] == true)) {\r\n          obj[item] = obj[item] + pricePerPerson;\r\n        }\r\n      })\r\n      props.handleAdd(obj, doneValue, addClick, props.indexValue);\r\n    }\r\n  }\r\n\r\n  const handleCompute = () => {\r\n    props.handleAmountChange();\r\n  }\r\n\r\n  const handleEdit = () => {\r\n    props.handleDone(false);\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Grid container spacing={2} style={{ paddingTop: \"20px\" }}>\r\n        <Grid item xs={12}>\r\n          <FormControl sx={{ m: 1, width: '25ch' }} variant=\"standard\">\r\n            <InputLabel htmlFor=\"standard-adornment-password\">Name</InputLabel><Input\r\n              id=\"outlined-name\"\r\n              label=\"Name\"\r\n              value={name}\r\n              onChange={handleName}\r\n              variant=\"standard\"\r\n              style={{ marginRight: \"20px\" }}\r\n              disabled={props.isDone}\r\n            /></FormControl>\r\n          <FormControl sx={{ m: 1, width: '25ch' }} variant=\"standard\">\r\n            <InputLabel htmlFor=\"standard-adornment-password\">Price</InputLabel>\r\n            <Input\r\n              id=\"outlined-uncontrolled\"\r\n              label=\"Price\"\r\n              value={price}\r\n              type={\"number\"}\r\n              onChange={handlePrice}\r\n              variant=\"standard\"\r\n              startAdornment={<InputAdornment position=\"start\">$</InputAdornment>}\r\n              disabled={props.isDone}\r\n            />\r\n          </FormControl>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <FormControl sx={{ m: 3 }} component=\"fieldset\" variant=\"standard\">\r\n            <FormGroup aria-label=\"position\" row>\r\n              {Object.keys(nameList).map(function (key) {\r\n                return (<FormControlLabel\r\n                  control={\r\n                    <Checkbox checked={nameList[key]} onChange={handleChange} name={key} disabled={props.isDone || (nameList['All'] == true && key != 'All')} />\r\n                  }\r\n                  label={key}\r\n                  labelPlacement=\"bottom\"\r\n                />)\r\n              })}\r\n            </FormGroup>\r\n          </FormControl>\r\n        </Grid>\r\n      </Grid>\r\n      {!props.isDone && props.lastValue ? <Button variant=\"outlined\" style={{ backgroundColor: \"green\", marginRight: \"10px\", color: \"white\" }} onClick={() => { handleCalculation(false, true) }}>Add</Button> : null}\r\n      {props.lastValue && !props.isDone ? <Button variant=\"outlined\" style={{ backgroundColor: \"lightblue\", marginRight: \"10px\", color: \"white\" }} onClick={() => { handleDone() }}>Done</Button> : null}\r\n      {props.lastValue && props.isDone && !props.isCompute ? <Button variant=\"outlined\" style={{ backgroundColor: \"green\", marginRight: \"10px\", color: \"white\" }} onClick={() => { handleCompute() }}>Compute</Button> : null}\r\n      {props.lastValue && props.isDone && !props.isCompute ? <Button variant=\"outlined\" style={{ backgroundColor: \"lightblue\", marginRight: \"10px\", color: \"white\" }} onClick={() => { handleEdit() }}>Edit</Button> : null}\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from 'chart.js';\r\nimport { Pie } from 'react-chartjs-2';\r\n\r\nChartJS.register(ArcElement, Tooltip, Legend);\r\n\r\n\r\nexport default function PieChart(props) {\r\n\r\n    const [chartData, setChartData] = useState(null);\r\n    const [show, setShow] = useState(false);\r\n\r\n\r\n    useEffect(() => {\r\n        let names = []\r\n        let amount = []\r\n        let displayData = props.data;\r\n        if (displayData !== null) {\r\n            Object.keys(displayData).map(function (key) {\r\n                names.push(key);\r\n                if (displayData[key] > 0) {\r\n                    setShow(true);\r\n                }\r\n                amount.push(Math.round(displayData[key] * 100) / 100);\r\n            })\r\n        }\r\n        let data = {\r\n            labels: names,\r\n            datasets: [\r\n                {\r\n                    label: 'Amount spent',\r\n                    data: amount,\r\n                    backgroundColor: [\r\n                        'rgba(255, 99, 132, 0.2)',\r\n                        'rgba(54, 162, 235, 0.2)',\r\n                        'rgba(255, 206, 86, 0.2)',\r\n                        'rgba(75, 192, 192, 0.2)',\r\n                        'rgba(153, 102, 255, 0.2)',\r\n                        'rgba(255, 159, 64, 0.2)',\r\n                    ],\r\n                    borderColor: [\r\n                        'rgba(255, 99, 132, 1)',\r\n                        'rgba(54, 162, 235, 1)',\r\n                        'rgba(255, 206, 86, 1)',\r\n                        'rgba(75, 192, 192, 1)',\r\n                        'rgba(153, 102, 255, 1)',\r\n                        'rgba(255, 159, 64, 1)',\r\n                    ],\r\n                    borderWidth: 1,\r\n                },\r\n            ],\r\n        }\r\n\r\n        setChartData(data);\r\n\r\n    }, [props])\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {chartData !== null && show ? (<Pie data={chartData} height=\"350px\"\r\n                width=\"350px\" options={{ maintainAspectRatio: false }} />) : null}\r\n        </React.Fragment>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport Typography from '@mui/material/Typography';\r\nimport Grid from '@mui/material/Grid';\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\nimport OutlinedInput from '@mui/material/OutlinedInput';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport PieChart from './pieChart';\r\n\r\n\r\nexport default function TotalAmount(props) {\r\n    return (\r\n        <React.Fragment>\r\n            {Object.keys(props.amountData).map(function (key) {\r\n                return (<Grid container spacing={2} style={{ paddingTop: \"20px\" }}>\r\n                    <Grid item xs={3}>\r\n                        <Typography sx={{ fontSize: 16, fontWeight: \"bold\" }} style={{ color: \"black\" }} gutterBottom>\r\n                            {key}\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={9}>\r\n                        <FormControl fsx={{ m: 1, width: '25ch' }} >\r\n                            <InputLabel htmlFor=\"outlined-adornment-amount\">Amount</InputLabel>\r\n                            <OutlinedInput\r\n                                id={key}\r\n                                value={Math.round(props.amountData[key] * 100) / 100}\r\n                                startAdornment={<InputAdornment position=\"start\">$</InputAdornment>}\r\n                                label=\"Amount\"\r\n                                disabled\r\n                            />\r\n                        </FormControl>\r\n                    </Grid>\r\n                </Grid>)\r\n            })}\r\n            <div style={{ marginTop: \"50px\" }}>\r\n                <PieChart data={props.amountData} />\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { styled } from '@mui/material/styles';\r\nimport Box from '@mui/material/Box';\r\nimport Paper from '@mui/material/Paper';\r\nimport Grid from '@mui/material/Grid';\r\nimport Typography from '@mui/material/Typography';\r\nimport NameList from './nameList';\r\nimport TotalAmount from './totalAmount';\r\nimport Card from '@mui/material/Card';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport { amountNames } from './constants';\r\n\r\n\r\nconst Item = styled(Paper)(({ theme }) => ({\r\n    ...theme.typography.body2,\r\n    padding: theme.spacing(1),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n}));\r\n\r\nexport default function Parent() {\r\n\r\n    const [countList, setCountList] = React.useState([0]);\r\n    const [priceList, setPriceList] = React.useState([]);\r\n    const [amountList, setAmountList] = React.useState({ ...amountNames });\r\n    const [done, setDone] = React.useState(false);\r\n    const [compute, setCompute] = React.useState(false);\r\n    const [edit, setEdit] = React.useState(false);\r\n\r\n    const handleDone = (value) => {\r\n        if (value == false) {\r\n            setEdit(true);\r\n        }\r\n        setDone(value);\r\n    }\r\n\r\n    const handlePrice = (value, isDone, isAdd, index) => {\r\n        let dummyList = [...priceList];\r\n        if (dummyList.length > index) {\r\n            dummyList[index] = value;\r\n        } else {\r\n            dummyList.push(value);\r\n        }\r\n        if (isAdd && !isDone) {\r\n            let dummyCountList = [...countList]\r\n            let newValue = dummyCountList.length + 1;\r\n            dummyCountList.push(newValue);\r\n            setCountList(dummyCountList);\r\n        }\r\n        setPriceList(dummyList);\r\n    }\r\n\r\n    const handleAmount = () => {\r\n        setCompute(true);\r\n        let dummyData = { ...amountList };\r\n        priceList.forEach(price => {\r\n            Object.keys(price).forEach(item => {\r\n                dummyData[item] = dummyData[item] + price[item];\r\n            })\r\n        })\r\n        setAmountList(dummyData);\r\n        var elmnt = document.getElementById('card');\r\n        elmnt.scrollIntoView();\r\n    }\r\n\r\n    return (\r\n        <Box sx={{ flexGrow: 1 }}>\r\n            <Grid container spacing={2}>\r\n                <Grid item xs={12} md={6}>\r\n                    <Card style={{ margin: \"10px\", backgroundColor: \"aliceblue\" }} id=\"card\">\r\n                        <CardContent>\r\n                            <Typography sx={{ fontSize: 16, fontWeight: \"bold\" }} style={{ color: \"cadetblue\" }} gutterBottom>\r\n                                {`Total Amount`}\r\n                            </Typography>\r\n                            <TotalAmount amountData={amountList} />\r\n                        </CardContent>\r\n                    </Card>\r\n                </Grid>\r\n                <Grid item xs={12} md={6}>\r\n                    <Card style={{ margin: \"10px\", backgroundColor: \"antiquewhite\" }}>\r\n                        <CardContent>\r\n                            <Typography sx={{ fontSize: 16, fontWeight: \"bold\" }} style={{ color: \"cadetblue\" }} gutterBottom>\r\n                                {`Calculate Fare`}\r\n                            </Typography>\r\n                            {countList.map((item, index) => {\r\n                                return <NameList handleAmountChange={handleAmount} handleAdd={handlePrice} lastValue={countList.length == index + 1}\r\n                                    indexValue={index} isDone={done} isCompute={compute} handleDone={handleDone} />\r\n                            })}\r\n                        </CardContent>\r\n                    </Card>\r\n                </Grid>\r\n            </Grid>\r\n        </Box>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport './App.css';\r\nimport Parent from './calculator/parent';\r\n\r\nfunction App() {\r\n  return (\r\n    <React.Fragment>\r\n     <Parent/>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n//import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n//reportWebVitals();\n"],"sourceRoot":""}