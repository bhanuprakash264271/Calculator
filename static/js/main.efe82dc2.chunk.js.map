{"version":3,"sources":["calculator/nameList.js","calculator/pieChart.js","calculator/totalAmount.js","calculator/parent.js","App.js","index.js"],"names":["NameList","props","React","useState","Rajeev","Nandan","Shreyas","Tirth","Bhanu","nameList","setNameList","name","setName","price","setPrice","isDone","setIsDone","isCompute","setIsCompute","handleChange","event","target","checked","handleCalculation","doneValue","obj","count","Object","keys","forEach","item","pricePerPerson","handleAdd","Fragment","Grid","container","spacing","style","paddingTop","xs","FormControl","sx","m","width","variant","InputLabel","htmlFor","Input","id","label","value","onChange","marginRight","disabled","lastValue","startAdornment","InputAdornment","position","component","FormGroup","aria-label","row","map","key","FormControlLabel","control","Checkbox","labelPlacement","Button","backgroundColor","color","onClick","handleAmountChange","PieChart","chartData","setChartData","show","setShow","useEffect","names","amount","displayData","data","push","Math","round","labels","datasets","borderColor","borderWidth","height","options","maintainAspectRatio","TotalAmount","amountData","Typography","fontSize","fontWeight","gutterBottom","fsx","OutlinedInput","marginTop","ChartJS","register","ArcElement","Tooltip","Legend","styled","Paper","theme","typography","body2","padding","textAlign","palette","text","secondary","Parent","countList","setCountList","priceList","setPriceList","amountList","setAmountList","handlePrice","dummyList","dummyCountList","newValue","length","handleAmount","dummyData","document","getElementById","scrollIntoView","Box","flexGrow","md","Card","margin","CardContent","index","App","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.efe82dc2.chunk.js","sourcesContent":["import React from 'react';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport FormGroup from '@mui/material/FormGroup';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport Grid from '@mui/material/Grid';\r\nimport Button from '@mui/material/Button';\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\nimport Input from '@mui/material/Input';\r\nimport InputLabel from '@mui/material/InputLabel';\r\n\r\nexport default function NameList(props) {\r\n  const [nameList, setNameList] = React.useState({\r\n    Rajeev: false,\r\n    Nandan: false,\r\n    Shreyas: false,\r\n    Tirth: false,\r\n    Bhanu: false,\r\n  });\r\n\r\n  const [name, setName] = React.useState('');\r\n  const [price, setPrice] = React.useState(null);\r\n  const [isDone, setIsDone] = React.useState(false);\r\n  const [isCompute, setIsCompute] = React.useState(true);\r\n\r\n  const handleName = (event) => {\r\n    setName(event.target.value);\r\n  };\r\n\r\n  const handlePrice = (event) => {\r\n    setPrice(event.target.value);\r\n  };\r\n\r\n  const handleDone = () => {\r\n    setIsDone(true);\r\n    handleCalculation(true);\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    setNameList({\r\n      ...nameList,\r\n      [event.target.name]: event.target.checked,\r\n    });\r\n  };\r\n\r\n  const handleCalculation = (doneValue) => {\r\n    let obj = {\r\n      Rajeev: 0.00,\r\n      Nandan: 0.00,\r\n      Shreyas: 0.00,\r\n      Tirth: 0.00,\r\n      Bhanu: 0.00,\r\n    }\r\n    if (price !== 0) {\r\n      let count = 0;\r\n      Object.keys(nameList).forEach(item => {\r\n        if (nameList[item] == true) {\r\n          count = count + 1;\r\n        }\r\n      })\r\n      let pricePerPerson = price / count;\r\n      Object.keys(nameList).forEach(item => {\r\n        if (nameList[item] == true) {\r\n          obj[item] = obj[item] + pricePerPerson;\r\n        }\r\n      })\r\n      props.handleAdd(obj, doneValue);\r\n    }\r\n  }\r\n\r\n  const handleCompute = () => {\r\n    setIsCompute(false);\r\n    props.handleAmountChange();\r\n  }\r\n\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Grid container spacing={2} style={{ paddingTop: \"20px\" }}>\r\n        <Grid item xs={12}>\r\n          <FormControl sx={{ m: 1, width: '25ch' }} variant=\"standard\">\r\n            <InputLabel htmlFor=\"standard-adornment-password\">Name</InputLabel><Input\r\n              id=\"outlined-name\"\r\n              label=\"Name\"\r\n              value={name}\r\n              onChange={handleName}\r\n              variant=\"standard\"\r\n              style={{ marginRight: \"20px\" }}\r\n              disabled={!props.lastValue || isDone}\r\n            /></FormControl>\r\n          <FormControl sx={{ m: 1, width: '25ch' }} variant=\"standard\">\r\n            <InputLabel htmlFor=\"standard-adornment-password\">Price</InputLabel>\r\n            <Input\r\n              id=\"outlined-uncontrolled\"\r\n              label=\"Price\"\r\n              value={price}\r\n              onChange={handlePrice}\r\n              variant=\"standard\"\r\n              startAdornment={<InputAdornment position=\"start\">$</InputAdornment>}\r\n              disabled={!props.lastValue || isDone}\r\n            />\r\n          </FormControl>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <FormControl sx={{ m: 3 }} component=\"fieldset\" variant=\"standard\">\r\n            <FormGroup aria-label=\"position\" row>\r\n              {Object.keys(nameList).map(function (key) {\r\n                return (<FormControlLabel\r\n                  control={\r\n                    <Checkbox checked={nameList[key]} onChange={handleChange} name={key} disabled={!props.lastValue || isDone} />\r\n                  }\r\n                  label={key}\r\n                  labelPlacement=\"bottom\"\r\n                />)\r\n              })}\r\n            </FormGroup>\r\n          </FormControl>\r\n        </Grid>\r\n      </Grid>\r\n      {!isDone && props.lastValue ? <Button variant=\"outlined\" style={{ backgroundColor: \"green\", marginRight: \"10px\", color: \"white\" }} onClick={() => { handleCalculation(false) }}>Add</Button> : null}\r\n      {props.lastValue && !isDone ? <Button variant=\"outlined\" style={{ backgroundColor: \"lightblue\", marginRight: \"10px\", color: \"white\" }} onClick={() => { handleDone() }}>Done</Button> : null}\r\n      {props.lastValue && isDone && isCompute ? <Button variant=\"outlined\" style={{ backgroundColor: \"blue\", marginRight: \"10px\", color: \"white\" }} onClick={() => { handleCompute() }}>Compute</Button> : null}\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from 'chart.js';\r\nimport { Pie } from 'react-chartjs-2';\r\n\r\nChartJS.register(ArcElement, Tooltip, Legend);\r\n\r\n\r\nexport default function PieChart(props) {\r\n\r\n    const [chartData, setChartData] = useState(null);\r\n    const [show, setShow] = useState(false);\r\n\r\n\r\n    useEffect(() => {\r\n        let names = []\r\n        let amount = []\r\n        let displayData = props.data;\r\n        if (displayData !== null) {\r\n            Object.keys(displayData).map(function (key) {\r\n                names.push(key);\r\n                if (displayData[key] > 0) {\r\n                    setShow(true);\r\n                }\r\n                amount.push(Math.round(displayData[key] * 100) / 100);\r\n            })\r\n        }\r\n        let data = {\r\n            labels: names,\r\n            datasets: [\r\n                {\r\n                    label: 'Amount spent',\r\n                    data: amount,\r\n                    backgroundColor: [\r\n                        'rgba(255, 99, 132, 0.2)',\r\n                        'rgba(54, 162, 235, 0.2)',\r\n                        'rgba(255, 206, 86, 0.2)',\r\n                        'rgba(75, 192, 192, 0.2)',\r\n                        'rgba(153, 102, 255, 0.2)',\r\n                        'rgba(255, 159, 64, 0.2)',\r\n                    ],\r\n                    borderColor: [\r\n                        'rgba(255, 99, 132, 1)',\r\n                        'rgba(54, 162, 235, 1)',\r\n                        'rgba(255, 206, 86, 1)',\r\n                        'rgba(75, 192, 192, 1)',\r\n                        'rgba(153, 102, 255, 1)',\r\n                        'rgba(255, 159, 64, 1)',\r\n                    ],\r\n                    borderWidth: 1,\r\n                },\r\n            ],\r\n        }\r\n\r\n        setChartData(data);\r\n\r\n    }, [props])\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {chartData !== null && show ? (<Pie data={chartData} height=\"350px\"\r\n                width=\"350px\" options={{ maintainAspectRatio: false }} />) : null}\r\n        </React.Fragment>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport Typography from '@mui/material/Typography';\r\nimport Grid from '@mui/material/Grid';\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\nimport OutlinedInput from '@mui/material/OutlinedInput';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport PieChart from './pieChart';\r\n\r\n\r\nexport default function TotalAmount(props) {\r\n    return (\r\n        <React.Fragment>\r\n            {Object.keys(props.amountData).map(function (key) {\r\n                return (<Grid container spacing={2} style={{ paddingTop: \"20px\" }}>\r\n                    <Grid item xs={3}>\r\n                        <Typography sx={{ fontSize: 16, fontWeight: \"bold\" }} style={{ color: \"black\" }} gutterBottom>\r\n                            {key}\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={9}>\r\n                        <FormControl fsx={{ m: 1, width: '25ch' }} >\r\n                            <InputLabel htmlFor=\"outlined-adornment-amount\">Amount</InputLabel>\r\n                            <OutlinedInput\r\n                                id={key}\r\n                                value={Math.round(props.amountData[key] * 100) / 100}\r\n                                startAdornment={<InputAdornment position=\"start\">$</InputAdornment>}\r\n                                label=\"Amount\"\r\n                                disabled\r\n                            />\r\n                        </FormControl>\r\n                    </Grid>\r\n                </Grid>)\r\n            })}\r\n            <div style={{ marginTop: \"50px\" }}>\r\n                <PieChart data={props.amountData} />\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { styled } from '@mui/material/styles';\r\nimport Box from '@mui/material/Box';\r\nimport Paper from '@mui/material/Paper';\r\nimport Grid from '@mui/material/Grid';\r\nimport Typography from '@mui/material/Typography';\r\nimport NameList from './nameList';\r\nimport TotalAmount from './totalAmount';\r\nimport Card from '@mui/material/Card';\r\nimport CardContent from '@mui/material/CardContent';\r\n\r\n\r\nconst Item = styled(Paper)(({ theme }) => ({\r\n    ...theme.typography.body2,\r\n    padding: theme.spacing(1),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n}));\r\n\r\nexport default function Parent() {\r\n\r\n    const [countList, setCountList] = React.useState([0]);\r\n    const [priceList, setPriceList] = React.useState([]);\r\n    const [amountList, setAmountList] = React.useState({\r\n        Rajeev: 0.00,\r\n        Nandan: 0.00,\r\n        Shreyas: 0.00,\r\n        Tirth: 0.00,\r\n        Bhanu: 0.00,\r\n    });\r\n\r\n    const handlePrice = (value, isDone) => {\r\n        let dummyList = [...priceList];\r\n        dummyList.push(value)\r\n        setPriceList(dummyList);\r\n        if (!isDone) {\r\n            let dummyCountList = [...countList]\r\n            let newValue = dummyCountList.length + 1;\r\n            dummyCountList.push(newValue);\r\n            setCountList(dummyCountList);\r\n        }\r\n    }\r\n\r\n    const handleAmount = () => {\r\n        let dummyData = { ...amountList };\r\n        priceList.forEach(price => {\r\n            Object.keys(price).forEach(item => {\r\n                dummyData[item] = dummyData[item] + price[item];\r\n            })\r\n        })\r\n        setAmountList(dummyData);\r\n        var elmnt = document.getElementById('card');\r\n        elmnt.scrollIntoView();\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <Box sx={{ flexGrow: 1 }}>\r\n            <Grid container spacing={2}>\r\n                <Grid item xs={12} md={6}>\r\n                    <Card style={{ margin: \"10px\", backgroundColor: \"aliceblue\" }} id=\"card\">\r\n                        <CardContent>\r\n                            <Typography sx={{ fontSize: 16, fontWeight: \"bold\" }} style={{ color: \"black\" }} gutterBottom>\r\n                                {`Total Amount`}\r\n                            </Typography>\r\n                            <TotalAmount amountData={amountList} />\r\n                        </CardContent>\r\n                    </Card>\r\n                </Grid>\r\n                <Grid item xs={12} md={6}>\r\n                    <Card style={{ margin: \"10px\", backgroundColor: \"antiquewhite\" }}>\r\n                        <CardContent>\r\n                            <Typography sx={{ fontSize: 16, fontWeight: \"bold\" }} style={{ color: \"black\" }} gutterBottom>\r\n                                {`Calculate Fare`}\r\n                            </Typography>\r\n                            {countList.map((item, index) => {\r\n                                return <NameList handleAmountChange={handleAmount} handleAdd={handlePrice} lastValue={countList.length == index + 1} />\r\n                            })}\r\n                        </CardContent>\r\n                    </Card>\r\n                </Grid>\r\n            </Grid>\r\n        </Box>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport './App.css';\r\nimport Parent from './calculator/parent';\r\n\r\nfunction App() {\r\n  return (\r\n    <React.Fragment>\r\n     <Parent/>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n//import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n//reportWebVitals();\n"],"sourceRoot":""}