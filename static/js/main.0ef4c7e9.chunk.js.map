{"version":3,"sources":["calculator/nameList.js","calculator/totalAmount.js","calculator/parent.js","App.js","index.js"],"names":["NameList","props","React","Rajeev","Nandhan","Shreyas","Tirth","Bhanu","nameList","setNameList","name","setName","price","setPrice","isDone","setIsDone","isCompute","setIsCompute","handleChange","event","target","checked","handleCalculation","doneValue","obj","count","Object","keys","forEach","item","pricePerPerson","handleAdd","Grid","container","spacing","style","paddingTop","xs","FormControl","sx","m","width","variant","InputLabel","htmlFor","Input","id","label","value","onChange","marginRight","disabled","lastValue","startAdornment","InputAdornment","position","component","FormGroup","aria-label","row","map","key","FormControlLabel","control","Checkbox","labelPlacement","Button","backgroundColor","color","onClick","handleAmountChange","TotalAmount","amountData","Typography","fontSize","fontWeight","gutterBottom","TextField","Math","round","styled","Paper","theme","typography","body2","padding","textAlign","palette","text","secondary","Parent","countList","setCountList","priceList","setPriceList","amountList","setAmountList","handlePrice","dummyList","push","dummyCountList","newValue","length","handleAmount","dummyData","Box","flexGrow","md","Card","marginTop","CardContent","index","App","Fragment","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0ef4c7e9.chunk.js","sourcesContent":["import * as React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport FormLabel from '@mui/material/FormLabel';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport FormGroup from '@mui/material/FormGroup';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport FormHelperText from '@mui/material/FormHelperText';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport Grid from '@mui/material/Grid';\r\nimport Button from '@mui/material/Button';\r\nimport TextField from '@mui/material/TextField';\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\nimport Input from '@mui/material/Input';\r\nimport InputLabel from '@mui/material/InputLabel';\r\n\r\nexport default function NameList(props) {\r\n  const [nameList, setNameList] = React.useState({\r\n    Rajeev: false,\r\n    Nandhan: false,\r\n    Shreyas: false,\r\n    Tirth: false,\r\n    Bhanu: false,\r\n  });\r\n\r\n  const [name, setName] = React.useState('');\r\n  const [price, setPrice] = React.useState(null);\r\n  const [isDone, setIsDone] = React.useState(false);\r\n  const [isCompute, setIsCompute] = React.useState(true);\r\n\r\n  const handleName = (event) => {\r\n    setName(event.target.value);\r\n  };\r\n\r\n  const handlePrice = (event) => {\r\n    setPrice(event.target.value);\r\n  };\r\n\r\n  const handleDone = () => {\r\n    setIsDone(true);\r\n    handleCalculation(true);\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    setNameList({\r\n      ...nameList,\r\n      [event.target.name]: event.target.checked,\r\n    });\r\n  };\r\n\r\n  const handleCalculation = (doneValue) => {\r\n    let obj = {\r\n      Rajeev: 0.00,\r\n      Nandhan: 0.00,\r\n      Shreyas: 0.00,\r\n      Tirth: 0.00,\r\n      Bhanu: 0.00,\r\n    }\r\n    if (price !== 0) {\r\n      let count = 0;\r\n      Object.keys(nameList).forEach(item => {\r\n        if (nameList[item] == true) {\r\n          count = count + 1;\r\n        }\r\n      })\r\n      let pricePerPerson = price / count;\r\n      Object.keys(nameList).forEach(item => {\r\n        if (nameList[item] == true) {\r\n          obj[item] = obj[item] + pricePerPerson;\r\n        }\r\n      })\r\n      props.handleAdd(obj, doneValue);\r\n    }\r\n  }\r\n\r\n  const handleCompute = () => {\r\n    setIsCompute(false);\r\n    props.handleAmountChange();\r\n  }\r\n\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Grid container spacing={2} style={{ paddingTop: \"20px\" }}>\r\n        <Grid item xs={12}>\r\n          <FormControl sx={{ m: 1, width: '25ch' }} variant=\"standard\">\r\n            <InputLabel htmlFor=\"standard-adornment-password\">Name</InputLabel><Input\r\n              id=\"outlined-name\"\r\n              label=\"Name\"\r\n              value={name}\r\n              onChange={handleName}\r\n              variant=\"standard\"\r\n              style={{ marginRight: \"20px\" }}\r\n              disabled={!props.lastValue || isDone}\r\n            /></FormControl>\r\n          <FormControl sx={{ m: 1, width: '25ch' }} variant=\"standard\">\r\n            <InputLabel htmlFor=\"standard-adornment-password\">Price</InputLabel>\r\n            <Input\r\n              id=\"outlined-uncontrolled\"\r\n              label=\"Price\"\r\n              value={price}\r\n              onChange={handlePrice}\r\n              variant=\"standard\"\r\n              startAdornment={<InputAdornment position=\"start\">$</InputAdornment>}\r\n              disabled={!props.lastValue || isDone}\r\n            />\r\n          </FormControl>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <FormControl sx={{ m: 3 }} component=\"fieldset\" variant=\"standard\">\r\n            {/* <FormLabel component=\"legend\">Total</FormLabel> */}\r\n            <FormGroup aria-label=\"position\" row>\r\n\r\n              {Object.keys(nameList).map(function (key) {\r\n                return (<FormControlLabel\r\n                  control={\r\n                    <Checkbox checked={nameList[key]} onChange={handleChange} name={key} disabled={!props.lastValue || isDone} />\r\n                  }\r\n                  label={key}\r\n                  labelPlacement=\"bottom\"\r\n                />)\r\n              })}\r\n            </FormGroup>\r\n            {/* <FormHelperText>Be careful</FormHelperText> */}\r\n          </FormControl>\r\n        </Grid>\r\n      </Grid>\r\n      {!isDone && props.lastValue ? <Button variant=\"outlined\" style={{ backgroundColor: \"lightblue\", marginRight: \"10px\", color: \"white\" }} onClick={() => { handleCalculation(false) }}>Add</Button> : null}\r\n      {props.lastValue && !isDone ? <Button variant=\"outlined\" style={{ backgroundColor: \"green\", marginRight: \"10px\", color: \"white\" }} onClick={() => { handleDone() }}>Done</Button> : null}\r\n      {props.lastValue && isDone && isCompute ? <Button variant=\"outlined\" style={{ backgroundColor: \"blue\", marginRight: \"10px\", color: \"white\" }} onClick={() => { handleCompute() }}>Compute</Button> : null}\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import * as React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport FormLabel from '@mui/material/FormLabel';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport FormGroup from '@mui/material/FormGroup';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport FormHelperText from '@mui/material/FormHelperText';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport TextField from '@mui/material/TextField';\r\nimport Typography from '@mui/material/Typography';\r\nimport Grid from '@mui/material/Grid';\r\n\r\nexport default function TotalAmount(props) {\r\n    return (\r\n        <React.Fragment>\r\n\r\n            {Object.keys(props.amountData).map(function (key) {\r\n                return (<Grid container spacing={2} style={{ paddingTop: \"20px\" }}>\r\n                    <Grid item xs={3}>\r\n                        <Typography sx={{ fontSize: 16, fontWeight: \"bold\" }} style={{ color: \"black\" }} gutterBottom>\r\n                            {key}\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={9}>\r\n                        <TextField id={key} label=\"Amount\" variant=\"outlined\" value={Math.round(props.amountData[key] * 100) / 100} disabled />\r\n                    </Grid>\r\n                </Grid>)\r\n            })}\r\n        </React.Fragment>\r\n    );\r\n}\r\n","import * as React from 'react';\r\nimport { styled } from '@mui/material/styles';\r\nimport Box from '@mui/material/Box';\r\nimport Paper from '@mui/material/Paper';\r\nimport Grid from '@mui/material/Grid';\r\nimport Typography from '@mui/material/Typography';\r\nimport NameList from './nameList';\r\nimport TotalAmount from './totalAmount';\r\nimport Card from '@mui/material/Card';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport Button from '@mui/material/Button';\r\nimport TextField from '@mui/material/TextField';\r\n\r\nconst Item = styled(Paper)(({ theme }) => ({\r\n    ...theme.typography.body2,\r\n    padding: theme.spacing(1),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n}));\r\n\r\nexport default function Parent() {\r\n\r\n    const [countList, setCountList] = React.useState([0]);\r\n    const [priceList, setPriceList] = React.useState([]);\r\n    const [amountList, setAmountList] = React.useState({\r\n        Rajeev: 0.00,\r\n        Nandhan: 0.00,\r\n        Shreyas: 0.00,\r\n        Tirth: 0.00,\r\n        Bhanu: 0.00,\r\n    });\r\n\r\n    const handlePrice = (value, isDone) => {\r\n        let dummyList = [...priceList];\r\n        dummyList.push(value)\r\n        setPriceList(dummyList);\r\n        if (!isDone) {\r\n            let dummyCountList = [...countList]\r\n            let newValue = dummyCountList.length + 1;\r\n            dummyCountList.push(newValue);\r\n            setCountList(dummyCountList);\r\n        }\r\n    }\r\n\r\n    const handleAmount = () => {\r\n        let dummyData = { ...amountList };\r\n        priceList.forEach(price => {\r\n            Object.keys(price).forEach(item => {\r\n                dummyData[item] = dummyData[item] + price[item];\r\n            })\r\n        })\r\n        setAmountList(dummyData);\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <Box sx={{ flexGrow: 1 }}>\r\n            <Grid container spacing={2}>\r\n                <Grid item xs={12} md={6}>\r\n                    <Card  style={{ marginTop: \"10px\", backgroundColor: \"aliceblue\" }}>\r\n                        <CardContent>\r\n                            <Typography sx={{ fontSize: 16, fontWeight: \"bold\" }} style={{ color: \"black\" }} gutterBottom>\r\n                                {`Total Amount`}\r\n                            </Typography>\r\n                            <TotalAmount amountData={amountList} />\r\n                        </CardContent>\r\n                    </Card>\r\n                </Grid>\r\n                <Grid item xs={12} md={6}>\r\n                    <Card style={{ marginTop: \"10px\", backgroundColor: \"antiquewhite\" }}>\r\n                        <CardContent>\r\n                            <Typography sx={{ fontSize: 16, fontWeight: \"bold\" }} style={{ color: \"black\" }} gutterBottom>\r\n                                {`Calculate Fare`}\r\n                            </Typography>\r\n                            {countList.map((item, index) => {\r\n                                return <NameList handleAmountChange={handleAmount} handleAdd={handlePrice} lastValue={countList.length == index + 1} />\r\n                            })}\r\n                        </CardContent>\r\n                    </Card>\r\n                </Grid>\r\n            </Grid>\r\n        </Box>\r\n    );\r\n}\r\n","import React from 'react';\nimport './App.css';\nimport Parent from './calculator/parent';\n\nfunction App() {\n  return (\n    <React.Fragment>\n     <Parent/>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n//import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n//reportWebVitals();\n"],"sourceRoot":""}